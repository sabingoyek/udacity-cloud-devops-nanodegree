Description: sabingoyek / Create the required resources for a new cloud environment in AWS.

Parameters:
    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    VpcCIDR:
        Description: Please enter the IP range (CIDR notation)
        Type: String
        Default: 10.0.0.0/16

    PublicSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation)
        Type: String
        Default: 10.0.0.0/24

    PrivateSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation)
        Type: String
        Default: 10.0.1.0/24


Resources:
    MainVPC:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VpcCIDR
            EnableDnsHostnames: true
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName
    
    InternetGW:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-InternetGW

    AttachInternetGateway:
        Type: AWS::EC2::VPCGatewayAttachment
        DependsOn: InternetGW
        Properties:
            InternetGatewayId: !Ref InternetGW
            VpcId: !Ref MainVPC


    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref MainVPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PublicSubnet1CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: Public

    PrivateSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref MainVPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PrivateSubnet1CIDR
            MapPublicIpOnLaunch: false
            Tags:
                - Key: Name
                  Value: Private

    EIP:
        Type: AWS::EC2::EIP
        DependsOn: AttachInternetGateway
        Properties:
            Domain: vpc

    NAT:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt EIP.AllocationId
            SubnetId: !Ref PublicSubnet1


    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref MainVPC
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Public Routes

    DefaultPublicRoute:
        Type: AWS::EC2::Route
        DependsOn: AttachInternetGateway
        Properties:
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGW

    PublicSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet1

    PrivateRouteTable1:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref MainVPC
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Private Routes

    DefaultPrivateRoute1:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NAT

    PrivateSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            SubnetId: !Ref PrivateSubnet1
Outputs:
    MainVPC:
        Description: A reference to the created VPC
        Value: !Ref MainVPC
        Export:
            Name: !Sub ${EnvironmentName}-MainVPCID
