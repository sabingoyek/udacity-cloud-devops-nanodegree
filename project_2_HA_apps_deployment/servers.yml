Description: >
    Kimba SABI N'GOYE
Parameters:
    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String
Resources:
    WebServerSecGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow http to our hosts and SSH from local only
            VpcId:
                Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
            SecurityGroupIngress:
                - IpProtocol: tcp
                  FromPort: 80
                  ToPort: 80
                  CidrIp: 0.0.0.0/0
                - IpProtocol: tcp
                  FromPort: 22
                  ToPort: 22
                  CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
                - IpProtocol: tcp
                  FromPort: 0
                  ToPort: 65535
                  CidrIp: 0.0.0.0/0
    LBSecGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow http to load balancer
            VpcId:
                Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
            SecurityGroupIngress:
                - IpProtocol: tcp
                  FromPort: 80
                  ToPort: 80
                  CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
                - IpProtocol: tcp
                  FromPort: 80
                  ToPort: 80
                  CidrIp: 0.0.0.0/0
    JumpboxSecGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow ssh access
            VpcId:
                Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
            SecurityGroupIngress:
                - IpProtocol: tcp
                  FromPort: 22
                  ToPort: 22
                  CidrIp: 0.0.0.0/0
    S3AccessRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                    - Effect: "Allow"
                      Principal:
                          Service:
                              - "ec2.amazonaws.com"
                      Action:
                          - "sts:AssumeRole"
            Path: "/"
    S3AccessPolicy:
        Type: "AWS::IAM::Policy"
        Properties:
            PolicyName: "AmazonS3ReadOnlyAccess"
            PolicyDocument:
                Version: "2012-10-17"
                Statement:
                    - Effect: "Allow"
                      Action: "*"
                      Resource: "*"
            Roles:
                - Ref: "S3AccessRole"
    InstanceProfile:
        Type: AWS::IAM::InstanceProfile
        Properties:
            Path: "/"
            Roles:
                - !Ref S3AccessRole
    WebAppLaunchConfig:
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
            UserData:
                Fn::Base64: !Sub |
                    #! /bin/bash
                    apt-get update -y
                    apt-get install apache2 -y
                    systemctl start apache2.service
                    cd /var/www/html
                    rm index.html
                    curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
                    apt install unzip
                    unzip awscliv2.zip
                    sudo ./aws/install
                    aws s3 sync s3://udagram007 /var/www/html/

            ImageId: ami-061dbd1209944525c
            SecurityGroups:
                - Ref: WebServerSecGroup
            InstanceType: t3.small
            IamInstanceProfile: !Ref InstanceProfile
            BlockDeviceMappings:
                - DeviceName: "/dev/sdk"
                  Ebs:
                      VolumeSize: '10'
    WebAppGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        DependsOn: WebAppLaunchConfig
        Properties:
            VPCZoneIdentifier:
                - Fn::ImportValue: !Sub "${EnvironmentName}-PRIV-NETS"
            LaunchConfigurationName: !Ref WebAppLaunchConfig
            MinSize: '4'
            MaxSize: '4'
            TargetGroupARNs:
                - Ref: WebAppTargetGroup
    WebAppLB:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            Subnets:
                - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
                - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
            SecurityGroups: 
            - Ref: LBSecGroup
    Listener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            DefaultActions:
                - Type: forward
                  TargetGroupArn:
                      Ref: WebAppTargetGroup
            LoadBalancerArn: !Ref WebAppLB
            Port: '80'
            Protocol: HTTP
    ALBListenerRule:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties:
            Actions:
                - Type: forward
                  TargetGroupArn: !Ref 'WebAppTargetGroup'
            Conditions:
                - Field: path-pattern
                  Values: [/]
            ListenerArn: !Ref 'Listener'
            Priority: 1
    WebAppTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            HealthCheckIntervalSeconds: 10
            HealthCheckPath: /
            HealthCheckProtocol: HTTP
            HealthCheckTimeoutSeconds: 8
            HealthyThresholdCount: 2
            Port: 80
            Protocol: HTTP
            UnhealthyThresholdCount: 5
            VpcId:
                Fn::ImportValue:
                    Fn::Sub: "${EnvironmentName}-VPCID"
    Jumpbox1:
        Type: AWS::EC2::Instance
        Properties:
            ImageId: ami-061dbd1209944525c 
            InstanceType: t2.micro
            SubnetId:
                Fn::ImportValue:
                    !Sub "${EnvironmentName}-PUB1-SN"
            SecurityGroupIds: 
                - !GetAtt 'JumpboxSecGroup.GroupId'
            KeyName: thek
            Tags:
                - Key: "Name"
                  Value:  "Jumpbox1"
    Jumpbox2:
        Type: AWS::EC2::Instance
        Properties:
            ImageId: ami-061dbd1209944525c 
            InstanceType: t2.micro
            SubnetId:
                Fn::ImportValue:
                    !Sub "${EnvironmentName}-PUB2-SN"
            SecurityGroupIds: 
                - !GetAtt 'JumpboxSecGroup.GroupId'
            KeyName: thek
            Tags:
                - Key: "Name"
                  Value: "Jumpbox2"
Outputs:
    LoadBalancerUrl:
        Description:  The URL of the Application Load Balancer
        Value:  !Join ["", ["http://", !GetAtt WebAppLB.DNSName]]
